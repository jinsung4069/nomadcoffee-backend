// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int          @id @default(autoincrement())
  firstName      String
  lastName       String?
  username       String       @unique
  email          String       @unique
  password       String
  bio            String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  name           String?
  location       String?
  avatarURL      String?
  photos         Photo[]
  likes          Like[]
  githubUsername String?
  followers      User[]       @relation("FollowRelation", references: [id])
  following      User[]       @relation("FollowRelation", references: [id])
  CoffeeShop     CoffeeShop[]
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  hashtags  Hashtag[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  hashtag   String   @unique
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([photoId, userId])
}

model Category {
  id    Int          @id @default(autoincrement())
  name  String
  slug  String
  shops CoffeeShop[]
}

model CoffeeShop {
  id         Int               @id @default(autoincrement())
  name       String
  latitude   String
  longitude  String
  user       User              @relation(fields: [userId], references: [id])
  userId     Int
  photos     CoffeeShopPhoto[]
  categories Category          @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model CoffeeShopPhoto {
  id           Int        @id @default(autoincrement())
  url          String
  shop         CoffeeShop @relation(fields: [coffeeShopId], references: [id])
  coffeeShopId Int
}
